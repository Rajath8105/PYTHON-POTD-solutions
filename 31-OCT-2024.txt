class Node:
    def __init__(self, data):
        self.data = data
        self.prev = None
        self.next = None

class Solution:
    # Function to insert a node in a sorted doubly linked list.
    def sortedInsert(self, head, x):
        # Create a new node with data x
        new_node = Node(x)
        
        # Case when list is empty or new node should be the new head
        if head is None:
            return new_node
        elif x < head.data:
            new_node.next = head
            head.prev = new_node
            return new_node
        
        # Traverse the list to find the insertion point
        current = head
        while current.next is not None and current.next.data < x:
            current = current.next
        
        # Insert the new node at the found position
        new_node.next = current.next
        new_node.prev = current
        if current.next:
            current.next.prev = new_node
        current.next = new_node
        
        return head

